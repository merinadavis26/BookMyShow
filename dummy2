### Agile Methodology

Agile methodology is a flexible way to manage projects and develop software. It focuses on delivering small parts of the project frequently, allowing teams to quickly adapt to changes and feedback from customers. This approach helps ensure that the final product meets the customer’s needs.

### Agile Principles

1. **Early Delivery of the Product**: Get a basic version of the product to customers quickly for early feedback.
2. **Adapt to Change**: Be open to making changes, even late in the process, to meet customer needs.
3. **Frequent Delivery**: Regularly deliver small updates or pieces of the project.
4. **Business and Developers Collaboration**: Work closely with business stakeholders to align the project with business goals.
5. **Motivated Individuals**: Ensure team members are motivated and supported.
6. **Face-to-Face Communication**: Promote direct communication to avoid misunderstandings.
7. **Working Software**: Prioritize creating software that works, as this is the main measure of progress.
8. **Maintain Constant Pace**: Work at a steady, sustainable pace.
9. **Technical Excellence**: Aim for high-quality technical work to improve agility.
10. **Simplicity**: Keep things simple to focus on essential work.
11. **Self-Organizing Teams**: Allow teams to organize their work and make decisions independently.
12. **Regular Reflection and Adjustment**: Frequently review and improve how the team works.

### Agile Manifesto

The Agile Manifesto is a set of guiding principles for flexible, customer-focused software development:

1. **Individuals and Interactions over Processes and Tools**: Value people and their interactions more than strict processes and tools.
2. **Working Software over Comprehensive Documentation**: Focus on creating software that works rather than spending too much time on paperwork.
3. **Customer Collaboration over Contract Negotiation**: Work closely with customers rather than strictly following contract terms.
4. **Responding to Change over Following a Plan**: Be ready to change plans as needed rather than sticking rigidly to them.

### Pillars of Scrum

Scrum, a popular Agile framework, is based on three key principles:

1. **Transparency**: Make sure everyone involved can see what’s happening in the project.
2. **Inspection**: Regularly check progress and project artifacts to identify issues.
3. **Adaptation**: Adjust processes based on what is learned during inspections to improve efficiency.

### Scrum Values

1. **Focus**: Stay concentrated on the goals of the sprint and work towards delivering value efficiently.
2. **Respect**: Recognize and value each team member’s contributions.
3. **Courage**: Take on challenging tasks and make tough decisions when necessary.
4. **Commitment**: Be dedicated to the team’s goals and do what’s necessary to achieve them.
5. **Openness**: Be transparent about work progress, feedback, and challenges.

### Roles in Scrum

1. **Scrum Master**: Helps the team follow Scrum practices, removes obstacles, and ensures adherence to Agile principles.
2. **Product Owner**: Manages the list of work to be done (product backlog), sets priorities, and represents the customer’s interests.
3. **Development Team**: A group of professionals who work together to deliver parts of the product during each sprint.

### Scrum Process

1. **Sprint**: A fixed period (usually 2-4 weeks) where the team works to deliver a part of the product.
2. **Sprint Planning**: A meeting at the start of the sprint to set goals and decide which tasks to complete.
3. **Daily Scrum**: A short, daily meeting where the team discusses progress and plans for the next day.
4. **Sprint Review**: A meeting at the end of the sprint where the team shows completed work to the Product Owner and updates the product backlog.
5. **Sprint Retrospective**: A session for the team to reflect on the sprint, discuss what went well, and identify areas for improvement.

### User Stories

User stories are short descriptions of a feature or functionality from the user’s perspective. They help capture requirements in an Agile framework and typically follow the format: "As a [user], I want [goal] so that [reason]."

### INVEST Model in Agile

1. **Independent**: Ensure user stories can be developed and delivered separately.
2. **Negotiable**: Allow stories to be flexible and open to changes.
3. **Valuable**: Ensure each user story adds value to the customer.
4. **Estimable**: Make stories clear enough to estimate the effort required.
5. **Small**: Break down stories into manageable sizes that can be completed within a sprint.
6. **Testable**: Write stories in a way that allows for objective testing to confirm they are done.

### Velocity in User Stories

Velocity measures how much work a Scrum team can complete in a sprint. It’s calculated by adding up the points of all completed user stories. This helps teams estimate how much work they can handle in future sprints and plan their workload accordingly.

This simplified overview of Agile methodology, principles, manifesto, and Scrum framework highlights the importance of flexibility, collaboration, and continuous improvement in modern software development practices.
