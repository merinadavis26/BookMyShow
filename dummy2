CREATE PROCEDURE spc_bookSeat
    @movieId INT,
    @theatreId INT,
    @showTime VARCHAR(50),
    @row VARCHAR(5),
    @number INT
AS
BEGIN
    UPDATE Seats
    SET availability = 'Booked'
    WHERE movieId = @movieId
      AND theatreId = @theatreId
      AND showTime = @showTime
      AND row = @row
      AND number = @number;
END

[HttpPost("book")]
public async Task<IActionResult> BookSeats([FromBody] List<SeatBooking> seatBookings)
{
    foreach (var booking in seatBookings)
    {
        await _seatServices.BookSeat(booking);
    }
    return Ok();
}

CREATE PROCEDURE spc_bookSeats
    @movieId INT,
    @theatreId INT,
    @showTime VARCHAR(50),
    @seats NVARCHAR(MAX)
AS
BEGIN
    -- Parse the JSON array into a table variable
    DECLARE @SeatsTable TABLE (
        [row] VARCHAR(5),
        [number] INT
    )

    INSERT INTO @SeatsTable ([row], [number])
    SELECT 
        JSON_VALUE(seat.value, '$.row') AS [row],
        JSON_VALUE(seat.value, '$.number') AS [number]
    FROM OPENJSON(@seats) AS seat

    -- Update each seat's availability to 'Booked'
    UPDATE s
    SET s.availability = 'Booked'
    FROM Seats s
    INNER JOIN @SeatsTable st
        ON s.row = st.[row]
        AND s.number = st.[number]
    WHERE s.movieId = @movieId
      AND s.theatreId = @theatreId
      AND s.showTime = @showTime
END

Argument of type '{ row: string; number: number; }' is not assignable to parameter of type 'number'.ts(2345)
Property 'row' does not exist on type 'number'
Property 'number' does not exist on type 'number'.ts(2339)
any


[HttpPost("bookSeats")]
public async Task<IActionResult> BookSeats([FromBody] List<BookSeat> seats)
{
    foreach (var seat in seats)
    {
        // Call your stored procedure to update each seat's availability to 'Booked'
        await _seatServices.BookSeat(seat.MovieId, seat.TheatreId, seat.ShowTime, seat.Row, seat.Number);
    }
    return Ok();
}

public async Task BookSeat(int movieId, int theatreId, string showTime, string row, int number)
{
    using (var connection = _dapperContext.CreateConnection())
    {
        var sqlQuery = "spc_bookSeat";

        var parameters = new DynamicParameters();
        parameters.Add("movieId", movieId, DbType.Int32);
        parameters.Add("theatreId", theatreId, DbType.Int32);
        parameters.Add("showTime", showTime, DbType.String);
        parameters.Add("row", row, DbType.String);
        parameters.Add("number", number, DbType.Int32);

        await connection.ExecuteAsync(sqlQuery, parameters, commandType: CommandType.StoredProcedure);
    }
}
