import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { environment } from '../../environments/environment';

export interface BookSeat {
  row: string;
  number: number;
  availability: string;
}

@Injectable({
  providedIn: 'root'
})
export class SeatService {

  private apiUrl = `${environment.apiUrl}/seats`;

  constructor(private http: HttpClient) { }

  getBookedSeats(showTime: string, theatreId: number, movieId: number): Observable<BookSeat[]> {
    const params = { showTime, theatreId: theatreId.toString(), movieId: movieId.toString() };
    return this.http.get<BookSeat[]>(`${this.apiUrl}/availability`, { params });
  }
}

<div *ngFor="let row of availableSeats | groupByRow">
  <div class="seat-row">
    <span class="row-label">{{ row.row }}</span>
    <div *ngFor="let seat of row.seats" class="seat-container">
      <button 
        class="seat-button" 
        [ngClass]="{ 'booked': seat.availability === 'Booked', 'available': seat.availability === 'Available' }"
        (click)="toggleSeat(seat.number)"
        [disabled]="seat.availability === 'Booked'">
        {{ seat.number }}
      </button>
    </div>
  </div>
</div>

<div class="modal-footer">
  <button type="button" class="btn btn-secondary" (click)="dismiss()">Cancel</button>
  <button type="button" class="btn btn-primary" (click)="confirm()">Confirm</button>
</div>

.seat-row {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.row-label {
  width: 20px;
  font-weight: bold;
  margin-right: 10px;
}

.seat-container {
  margin-right: 5px;
}

.seat-button {
  width: 40px;
  height: 40px;
  text-align: center;
}

.seat-button.booked {
  background-color: red;
  cursor: not-allowed;
}

.seat-button.available {
  background-color: green;
}
