ng generate component edit-movie

edit-movie.component.html

<div class="card">
  <div class="card-body">
    <h5 class="card-title">Edit Movie</h5>
    <form (ngSubmit)="onSubmit()" #editForm="ngForm">
      <div class="mb-3">
        <label for="name" class="form-label">Name</label>
        <input type="text" class="form-control" id="name" name="name" [(ngModel)]="movie.name" required>
      </div>
      <div class="mb-3">
        <label for="imdbRating" class="form-label">IMDb Rating</label>
        <select class="form-select" id="imdbRating" name="imdbRating" [(ngModel)]="movie.imdbRating" required>
          <option value="1">1 Star</option>
          <option value="2">2 Stars</option>
          <option value="3">3 Stars</option>
          <option value="4">4 Stars</option>
          <option value="5">5 Stars</option>
        </select>
      </div>
      <div class="mb-3">
        <label for="category" class="form-label">Category</label>
        <select class="form-select" id="category" name="category" [(ngModel)]="movie.categoryId" required>
          <option *ngFor="let category of categories" [value]="category.id">{{ category.name }}</option>
        </select>
      </div>
      <div class="mb-3">
        <label for="genre" class="form-label">Genre</label>
        <select class="form-select" id="genre" name="genre" [(ngModel)]="movie.genreId" required>
          <option *ngFor="let genre of genres" [value]="genre.id">{{ genre.name }}</option>
        </select>
      </div>
      <div class="mb-3">
        <label for="releaseDate" class="form-label">Release Date</label>
        <input type="date" class="form-control" id="releaseDate" name="releaseDate" [(ngModel)]="movie.releaseDate" required>
      </div>
      <div class="mb-3">
        <label for="duration" class="form-label">Duration (minutes)</label>
        <input type="number" class="form-control" id="duration" name="duration" [(ngModel)]="movie.duration" required>
      </div>
      <button type="submit" class="btn btn-primary">Submit</button>
    </form>
  </div>
</div>


edit-movie.component.ts

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Movie } from '../models/movie'; // Adjust path as needed
import { MovieService } from '../services/movie.service'; // Adjust path as needed
import { Category } from '../models/category'; // Adjust path as needed
import { Genre } from '../models/genre'; // Adjust path as needed
import { CategoryService } from '../services/category.service'; // Adjust path as needed
import { GenreService } from '../services/genre.service'; // Adjust path as needed
import { NgForm } from '@angular/forms';

@Component({
  selector: 'app-edit-movie',
  templateUrl: './edit-movie.component.html',
  styleUrls: ['./edit-movie.component.css']
})
export class EditMovieComponent implements OnInit {
  movieId: number;
  movie: Movie = new Movie();
  categories: Category[];
  genres: Genre[];

  constructor(
    private movieService: MovieService,
    private categoryService: CategoryService,
    private genreService: GenreService,
    private route: ActivatedRoute,
    private router: Router
  ) { }

  ngOnInit(): void {
    this.route.params.subscribe(params => {
      this.movieId = +params['id'];
      this.loadMovieDetails();
    });
    this.loadCategories();
    this.loadGenres();
  }

  loadMovieDetails(): void {
    this.movieService.getMovie(this.movieId).subscribe((data: Movie) => {
      this.movie = data;
    });
  }

  loadCategories(): void {
    this.categoryService.getAllCategories().subscribe((data: Category[]) => {
      this.categories = data;
    });
  }

  loadGenres(): void {
    this.genreService.getAllGenres().subscribe((data: Genre[]) => {
      this.genres = data;
    });
  }

  onSubmit(): void {
    this.movieService.editMovie(this.movie).subscribe(() => {
      this.router.navigate(['/movies-management']);
    });
  }
}
