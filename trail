INSERT INTO Seats (id, theatre_id, row, number)
VALUES 
(1, 1, 'A', 1),
(2, 1, 'A', 2),
(3, 1, 'A', 3),
(4, 1, 'A', 4),
(5, 1, 'B', 1),
(6, 1, 'B', 2),
(7, 1, 'B', 3),
(8, 1, 'B', 4),
(9, 1, 'C', 1),
(10, 1, 'C', 2),
(11, 1, 'C', 3),
(12, 1, 'C', 4);

CREATE TABLE Bookings (
  id INT Identity(1,1) PRIMARY KEY,
  show_id INT,
  seat_id INT,
  user_id INT,
  status VARCHAR(50),
  FOREIGN KEY (user_id) REFERENCES Users(UserId),  
  FOREIGN KEY (show_id) REFERENCES Show(Time,TheatreId,MovieId),
  FOREIGN KEY (seat_id) REFERENCES SeatTable(id)
);

INSERT INTO Bookings (id, show_id, seat_id, user_id, status)
VALUES 
(1, 1, 2, 1, 'booked'),
(2, 1, 3, 1, 'booked');

CREATE TABLE Bookings (
  id INT AUTO_INCREMENT PRIMARY KEY,
  show_id INT,
  seat_id INT,
  user_id INT,
  status VARCHAR(50),
  FOREIGN KEY (show_id) REFERENCES Shows(id),
  FOREIGN KEY (seat_id) REFERENCES Seats(id)
);

SELECT TOP (1000) [Number]
      ,[ShowTime]
      ,[TheatreId]
      ,[MovieId]
      ,[TicketId]
      ,[Availability]
      ,[SeatCategoryId]
      ,[Row]
  FROM [BookMyShowDB].[dbo].[Seat]
SELECT TOP (1000) [id]
      ,[theatre_id]
      ,[row]
      ,[number]
  FROM [BookMyShowDB].[dbo].[SeatTable]

SELECT 
    st.row,
    st.number,
    s.availability
FROM 
    [BookMyShowDB].[dbo].[Seat] s
JOIN 
    [BookMyShowDB].[dbo].[SeatTable] st
ON 
    s.[Row] = st.[row] AND s.[Number] = st.[number]
WHERE 
    s.[MovieId] = @movieId AND 
    s.[TheatreId] = @theatreId AND 
    s.[ShowTime] = @showTime

CREATE PROCEDURE GetSeatDetails
    @movieId INT,
    @theatreId INT,
    @showTime DATETIME
AS
BEGIN
    SELECT 
        st.row,
        st.number,
        s.availability
    FROM 
        [BookMyShowDB].[dbo].[Seat] s
    JOIN 
        [BookMyShowDB].[dbo].[SeatTable] st
    ON 
        s.[Row] = st.[row] AND s.[Number] = st.[number]
    WHERE 
        s.[MovieId] = @movieId AND 
        s.[TheatreId] = @theatreId AND 
        s.[ShowTime] = @showTime
END

public Task<List<BookSeat>> GetBookedSeats(string ShowTime, int theatreId, int MovieId)
{
    using (var connection = _dapperContext.CreateConnection())
    {
        var sqlQuery = "spc_getSeatAvailability";

        var parameters = new DynamicParameters();
        parameters.Add("movieId",MovieId, DbType.Int32);
        parameters.Add("theatreId", theatreId, DbType.Int32);
        parameters.Add("showTime", ShowTime, DbType.String);

        // Define the output parameter
        //parameters.Add("Result", dbType: DbType.Int32, direction: ParameterDirection.Output);

        connection.Execute(sqlQuery, parameters, commandType: CommandType.StoredProcedure);

        // Retrieve the output value
        //int result = parameters.Get<int>("Result");

        return result;
    }
}

 ALTER PROCEDURE [dbo].[spc_getSeatAvailability]
    @movieId INT,
    @theatreId INT,
    @showTime DATETIME
AS
BEGIN
    SELECT Distinct
        st.row,
        st.number,
        s.availability
    FROM 
        [BookMyShowDB].[dbo].[Seat] s
    JOIN 
        [BookMyShowDB].[dbo].[SeatTable] st
    ON 
        s.[Row] = st.[row] AND s.[Number] = st.[number]
    WHERE 
        s.[MovieId] = @movieId AND 
        s.[TheatreId] = @theatreId AND 
        s.[ShowTime] = @showTime
END
